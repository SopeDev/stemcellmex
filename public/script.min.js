function handleError(error,context="Unknown"){console.error(`Error in ${context}:`,error);if(typeof gtag!=="undefined"){gtag("event","exception",{description:`${context}: ${error.message}`,fatal:false})}}document.addEventListener("DOMContentLoaded",function(){try{const hamburger=document.querySelector(".hamburger");const mobileOverlay=document.querySelector(".mobile-nav-overlay");const navbar=document.querySelector(".navbar");const body=document.body;if(hamburger&&mobileOverlay){hamburger.addEventListener("click",function(){try{if(mobileOverlay.classList.contains("active")){hamburger.classList.remove("active");mobileOverlay.classList.remove("active");body.style.overflow="";if(window.scrollY>200){navbar.classList.add("scrolled")}}else{hamburger.classList.add("active");mobileOverlay.classList.add("active");body.style.overflow="hidden";if(navbar.classList.contains("scrolled")){navbar.classList.remove("scrolled")}}}catch(error){handleError(error,"Mobile Menu Toggle")}})}}catch(error){handleError(error,"Mobile Navigation Setup")}});document.addEventListener("DOMContentLoaded",function(){const navLinks=document.querySelectorAll('a[href^="#"]');navLinks.forEach(link=>{link.addEventListener("click",function(e){e.preventDefault();const targetId=this.getAttribute("href");const targetSection=document.querySelector(targetId);if(targetSection){const offsetTop=targetSection.offsetTop-80;window.scrollTo({top:offsetTop,behavior:"smooth"})}})});const scrollToTreatmentsBtn=document.querySelector(".scroll-to-treatments");if(scrollToTreatmentsBtn){scrollToTreatmentsBtn.addEventListener("click",function(){const treatmentsSection=document.querySelector(".treatments-section");if(treatmentsSection){const stemCellsPanel=document.querySelector("#stem-cells-details");if(stemCellsPanel){const offsetTop=stemCellsPanel.offsetTop-100;window.scrollTo({top:offsetTop,behavior:"smooth"})}else{const offsetTop=treatmentsSection.offsetTop+100;window.scrollTo({top:offsetTop,behavior:"smooth"})}}})}});window.addEventListener("scroll",function(){const navbar=document.querySelector(".navbar");if(navbar){if(window.scrollY>200){navbar.classList.add("scrolled")}else{navbar.classList.remove("scrolled")}}throttledContentWrapperOpacity()});const throttledContentWrapperOpacity=throttle(handleContentWrapperOpacity,16);const observerOptions={threshold:.1,rootMargin:"0px 0px -50px 0px"};const observer=new IntersectionObserver(function(entries){entries.forEach(entry=>{if(entry.isIntersecting){entry.target.style.opacity="1";entry.target.style.transform="translateY(0)"}})},observerOptions);function handleContentWrapperOpacity(){const contentWrappers=document.querySelectorAll(".content-wrapper");contentWrappers.forEach(wrapper=>{const rect=wrapper.getBoundingClientRect();const windowHeight=window.innerHeight;const elementCenter=rect.top+rect.height/2;const viewportCenter=windowHeight/2;const distanceFromCenter=Math.abs(elementCenter-viewportCenter);const maxDistance=windowHeight/2;let opacity=1-distanceFromCenter/maxDistance;opacity=Math.max(0,Math.min(1,opacity));wrapper.style.opacity=opacity})}function throttle(func,limit){let inThrottle;return function(){const args=arguments;const context=this;if(!inThrottle){func.apply(context,args);inThrottle=true;setTimeout(()=>inThrottle=false,limit)}}}document.addEventListener("DOMContentLoaded",function(){const animatedElements=document.querySelectorAll(".service-card, .team-member");animatedElements.forEach(el=>{el.style.opacity="0";el.style.transform="translateY(30px)";el.style.transition="opacity 0.6s ease, transform 0.6s ease";observer.observe(el)});handleContentWrapperOpacity()});document.addEventListener("DOMContentLoaded",function(){const primaryButtons=document.querySelectorAll(".btn-primary");const secondaryButtons=document.querySelectorAll(".btn-secondary");primaryButtons.forEach(button=>{button.addEventListener("click",function(){this.style.transform="scale(0.95)";setTimeout(()=>{this.style.transform="scale(1)"},150);const buttonText=this.textContent.toLowerCase();if(buttonText.includes("agendar")||buttonText.includes("consulta")||buttonText.includes("schedule")){const ctaSection=document.querySelector(".cta-section");if(ctaSection){ctaSection.scrollIntoView({behavior:"smooth"})}}else if(buttonText.includes("tratamientos")||buttonText.includes("treatments")){const treatmentsSection=document.querySelector("#tratamientos");if(treatmentsSection){treatmentsSection.scrollIntoView({behavior:"smooth"})}}else if(this.textContent.includes("Meet Our Team")||this.textContent.includes("Conoce Nuestro Equipo")){const teamSection=document.querySelector(".about-team");if(teamSection){teamSection.scrollIntoView({behavior:"smooth"})}}})});secondaryButtons.forEach(button=>{button.addEventListener("click",function(){this.style.transform="scale(0.95)";setTimeout(()=>{this.style.transform="scale(1)"},150);const buttonText=this.textContent.toLowerCase();if(buttonText.includes("conoce")||buttonText.includes("más")||buttonText.includes("learn")||buttonText.includes("more")){const aboutSection=document.querySelector(".about");if(aboutSection){aboutSection.scrollIntoView({behavior:"smooth"})}}else if(buttonText.includes("llamar")||buttonText.includes("call")){console.log("Opening phone call...")}else if(this.textContent.includes("Our Mission")||this.textContent.includes("Nuestra Misión")){const missionSection=document.querySelector(".about-mission");if(missionSection){missionSection.scrollIntoView({behavior:"smooth"})}}})})});function setupRandomShapes(){const organicShapes=document.querySelector(".organic-shapes");if(!organicShapes)return;const heroSection=document.querySelector(".hero");if(heroSection&&heroSection.classList.contains("hero-compact")){const allShapes=Array.from({length:20},(_,i)=>i+1);const selectedShapes=[];while(selectedShapes.length<5){const randomIndex=Math.floor(Math.random()*allShapes.length);const randomShape=allShapes[randomIndex];if(!selectedShapes.includes(randomShape)){selectedShapes.push(randomShape)}}organicShapes.innerHTML="";selectedShapes.forEach((shapeNum,index)=>{const depth=.2+index*.3;const shapeDiv=document.createElement("div");shapeDiv.className=`shape shape-${shapeNum}`;shapeDiv.setAttribute("data-depth",depth.toFixed(1));shapeDiv.innerHTML='<div class="shape-inner"></div>';organicShapes.appendChild(shapeDiv)});console.log(`Randomly selected shapes: ${selectedShapes.join(", ")}`)}}document.addEventListener("DOMContentLoaded",function(){const langBtns=document.querySelectorAll(".lang-btn");let currentLanguage="en";setupRandomShapes();function applyLanguage(lang){const elementsToTranslate=document.querySelectorAll("[data-es][data-en]");elementsToTranslate.forEach(element=>{const newText=element.getAttribute(`data-${lang}`);if(newText){element.innerHTML=newText}});langBtns.forEach(btn=>{btn.textContent=lang==="en"?"ES":"EN"});updateActiveNavLink()}function updateLanguage(){currentLanguage=currentLanguage==="en"?"es":"en";localStorage.setItem("stemcell-language",currentLanguage);const hamburger=document.querySelector(".hamburger");const mobileOverlay=document.querySelector(".mobile-nav-overlay");const body=document.body;if(mobileOverlay&&mobileOverlay.classList.contains("active")){hamburger.classList.remove("active");mobileOverlay.classList.remove("active");body.style.overflow="";if(window.scrollY>200){const navbar=document.querySelector(".navbar");if(navbar){navbar.classList.add("scrolled")}}}applyLanguage(currentLanguage);console.log(`Switched to ${currentLanguage==="en"?"English":"Spanish"}`)}const savedLanguage=localStorage.getItem("stemcell-language");if(savedLanguage&&(savedLanguage==="en"||savedLanguage==="es")){currentLanguage=savedLanguage;applyLanguage(currentLanguage)}else{applyLanguage("en")}langBtns.forEach(btn=>{btn.addEventListener("click",updateLanguage)})});document.addEventListener("DOMContentLoaded",function(){const faqItems=document.querySelectorAll(".faq-item");faqItems.forEach(item=>{const question=item.querySelector(".faq-question");const answer=item.querySelector(".faq-answer");question.setAttribute("aria-expanded","false");answer.setAttribute("aria-hidden","true");answer.style.maxHeight="0";answer.style.opacity="0";question.addEventListener("click",function(){const isOpen=item.classList.contains("open");faqItems.forEach(otherItem=>{if(otherItem!==item&&otherItem.classList.contains("open")){const otherQuestion=otherItem.querySelector(".faq-question");const otherAnswer=otherItem.querySelector(".faq-answer");otherItem.classList.remove("open");otherQuestion.setAttribute("aria-expanded","false");otherAnswer.setAttribute("aria-hidden","true");otherAnswer.style.maxHeight="0";otherAnswer.style.opacity="0"}});if(!isOpen){item.classList.add("open");question.setAttribute("aria-expanded","true");answer.setAttribute("aria-hidden","false");answer.style.maxHeight=answer.scrollHeight+48+"px";setTimeout(()=>{answer.style.opacity="1"},50)}else{item.classList.remove("open");question.setAttribute("aria-expanded","false");answer.setAttribute("aria-hidden","true");answer.style.opacity="0";answer.style.maxHeight="0"}});question.addEventListener("keydown",function(e){if(e.key==="Enter"||e.key===" "){e.preventDefault();question.click()}})})});let ticking=false;let lastScrollY=0;function updateParallax(){const scrolled=window.pageYOffset;const heroSection=document.querySelector(".hero");const time=Date.now()*.001;if(!heroSection)return;const heroBackground=document.querySelector(".parallax-bg");if(heroBackground){const bgY=scrolled*.3;heroBackground.style.transform=`translate3d(0, ${bgY}px, 0)`}const shapes=document.querySelectorAll(".shape");shapes.forEach((shape,index)=>{const depth=parseFloat(shape.getAttribute("data-depth")||"0.5");const speed=.5+depth*.5;const yPos=-(scrolled*speed);const xPos=scrolled*(depth*.1);const floatSpeed=.5+index*.1;const floatAmplitude=15+depth*10;const floatY=Math.sin(time*floatSpeed)*floatAmplitude;const rotation=Math.sin(time*(.3+index*.1))*180;const scale=1+Math.sin(time*(.2+index*.05))*.1;const borderRadiusProgress=Math.sin(time*(.2+index*.05));const borderRadius=45+borderRadiusProgress*5;shape.style.transform=`translate3d(${xPos}px, ${yPos+floatY}px, ${depth*100}px) rotate(${rotation}deg) scale(${scale})`;shape.style.borderRadius=`50% ${borderRadius}%`});const heroContent=document.querySelector(".parallax-content");if(heroContent){const contentY=scrolled*.1;heroContent.style.transform=`translate3d(0, ${contentY}px, 0)`}ticking=false}function requestTick(){if(!ticking){requestAnimationFrame(updateParallax);ticking=true}}window.addEventListener("scroll",function(){requestTick()},{passive:true});window.addEventListener("resize",function(){requestTick()},{passive:true});function animateFloat(){requestTick();requestAnimationFrame(animateFloat)}animateFloat();function updateActiveNavLink(){const navLinks=document.querySelectorAll(".nav-menu a, .mobile-nav-menu a");console.log("updateActiveNavLink called");console.log("Found navLinks:",navLinks.length);if(navLinks.length===0){console.log("No navigation links found");return}navLinks.forEach(link=>{link.classList.remove("active")});const currentPage=window.location.pathname;console.log("Current page pathname:",currentPage);navLinks.forEach(link=>{const href=link.getAttribute("href");console.log("Checking link:",href);if(href&&href!==""){const isCurrentPage=currentPage.endsWith(href)||currentPage.endsWith("/")&&href==="./index.html"||currentPage.endsWith("index.html")&&href==="./index.html"||currentPage.endsWith("treatments.html")&&href==="./treatments.html"||currentPage.endsWith("about.html")&&href==="./about.html"||currentPage.includes("faq.html")&&href==="./faq.html"||currentPage.includes("contact.html")&&href==="./contact.html";console.log("Link href:",href,"Current page:",currentPage,"Is current:",isCurrentPage);if(isCurrentPage){link.classList.add("active");console.log("Activated link:",href)}}})}document.addEventListener("DOMContentLoaded",function(){const treatmentsSection=document.querySelector(".treatments-section");const treatmentPanels=document.querySelectorAll(".treatment-panel:not(.treatment-overview)");if(!treatmentsSection||treatmentPanels.length===0){return}let isMobile=window.innerWidth<=768;function enableMobileMode(){treatmentPanels.forEach(panel=>{panel.style.position="relative";panel.style.transform="none";panel.style.height="auto";panel.style.minHeight="100vh";panel.style.display="block";panel.style.overflow="visible";panel.style.zIndex=""})}function enableDesktopMode(){treatmentPanels.forEach(panel=>{panel.style.position="";panel.style.transform="";panel.style.height="";panel.style.minHeight="";panel.style.display="";panel.style.overflow="";panel.style.zIndex="";panel.style.transform="translateY(100vh)"})}if(isMobile){enableMobileMode();return}else{enableDesktopMode()}let sectionStart=0;let sectionEnd=0;function initializeSection(){const rect=treatmentsSection.getBoundingClientRect();sectionStart=window.pageYOffset+rect.top;sectionEnd=sectionStart+treatmentPanels.length*window.innerHeight}if(!isMobile){initializeSection()}window.addEventListener("resize",function(){const newIsMobile=window.innerWidth<=768;if(newIsMobile!==isMobile){if(newIsMobile){enableMobileMode()}else{enableDesktopMode();initializeSection()}isMobile=newIsMobile}});function handleScroll(){const scrollY=window.pageYOffset;if(scrollY<sectionStart||scrollY>sectionEnd){return}const scrollDistance=scrollY-sectionStart;const viewportHeight=window.innerHeight;treatmentPanels.forEach((panel,index)=>{const panelStart=index*viewportHeight;const panelEnd=(index+1)*viewportHeight;if(scrollDistance>=panelStart&&scrollDistance<panelEnd){const panelScrollProgress=scrollDistance-panelStart;const transformY=Math.max(0,viewportHeight-panelScrollProgress);panel.style.transform=`translateY(${transformY}px)`;panel.classList.add("active")}else if(scrollDistance>=panelEnd){panel.style.transform="translateY(0)";panel.classList.add("active")}else{panel.style.transform="translateY(100vh)";panel.classList.remove("active")}})}const initialHash=window.location.hash;if(initialHash){const target=document.querySelector(initialHash);if(target){enableDesktopMode();initializeSection();const panelsArray=Array.from(treatmentPanels);const idx=panelsArray.findIndex(p=>"#"+p.id===initialHash);if(idx!==-1){const y=sectionStart+idx*window.innerHeight+1;window.scrollTo({top:y,behavior:"instant"});handleScroll()}else{target.scrollIntoView({behavior:"instant",block:"start"});handleScroll()}}}let scrollTimeout;window.addEventListener("scroll",function(){if(isMobile){return}if(scrollTimeout){clearTimeout(scrollTimeout)}scrollTimeout=requestAnimationFrame(()=>{handleScroll()})},{passive:true});if(!isMobile){handleScroll()}});document.addEventListener("DOMContentLoaded",function(){const homepageContactForm=document.getElementById("homepageContactForm");if(homepageContactForm){homepageContactForm.addEventListener("submit",function(e){e.preventDefault();handleFormSubmission(this,"Home Page")})}const faqContactForm=document.getElementById("faqContactForm");if(faqContactForm){faqContactForm.addEventListener("submit",function(e){e.preventDefault();handleFormSubmission(this,"FAQ Page")})}const aboutContactForm=document.getElementById("aboutContactForm");if(aboutContactForm){aboutContactForm.addEventListener("submit",function(e){e.preventDefault();handleFormSubmission(this,"About Page")})}const contactPageForm=document.getElementById("contactForm");if(contactPageForm){contactPageForm.addEventListener("submit",function(e){e.preventDefault();handleFormSubmission(this,"Contact Page")})}const treatmentsContactForm=document.getElementById("treatmentsContactForm");if(treatmentsContactForm){treatmentsContactForm.addEventListener("submit",function(e){e.preventDefault();handleFormSubmission(this,"Treatments Page")})}async function handleFormSubmission(form,formType){const formData=new FormData(form);const data=Object.fromEntries(formData);if(!data.name||!data.email||!data.subject||!data.message){showFormMessage(form,"Please fill in all required fields.","error");return}const emailRegex=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!emailRegex.test(data.email)){showFormMessage(form,"Please enter a valid email address.","error");return}const submitButton=form.querySelector('button[type="submit"]');const originalButtonText=submitButton.textContent;submitButton.disabled=true;submitButton.textContent="Sending...";try{const response=await fetch("/api/contact",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...data,source:formType})});if(response.ok){showFormMessage(form,"Thank you for your message! We will get back to you soon.","success");form.reset()}else{const errorData=await response.json();showFormMessage(form,errorData.message||"Failed to send message. Please try again.","error")}}catch(error){console.error("Form submission error:",error);showFormMessage(form,"Network error. Please check your connection and try again.","error")}finally{submitButton.disabled=false;submitButton.textContent=originalButtonText}}function showFormMessage(form,message,type){const formContainer=form.parentNode;const existingMessage=formContainer.querySelector(".form-message");if(existingMessage){existingMessage.remove()}const messageElement=document.createElement("div");messageElement.className=`form-message form-message-${type}`;messageElement.textContent=message;formContainer.insertBefore(messageElement,form.nextSibling);setTimeout(()=>{if(messageElement.parentNode){messageElement.remove()}},5e3)}});document.addEventListener("DOMContentLoaded",function(){if(window.location.pathname.includes("treatments.html")||document.querySelector(".treatments-hero")){initializeTreatmentsPage()}});function initializeTreatmentsPage(){const learnMoreButtons=document.querySelectorAll(".learn-more-btn");learnMoreButtons.forEach(button=>{button.addEventListener("click",function(){const treatmentType=this.closest(".treatment-card").dataset.treatment;const targetSection=document.getElementById(`${treatmentType}-details`);if(targetSection){const offsetTop=targetSection.offsetTop-100;window.scrollTo({top:offsetTop,behavior:"smooth"})}})});const footerTreatmentLinks=document.querySelectorAll('footer a[href^="#"]');footerTreatmentLinks.forEach(link=>{link.addEventListener("click",function(e){e.preventDefault();const targetId=this.getAttribute("href");const targetSection=document.querySelector(targetId);if(targetSection){const offsetTop=targetSection.offsetTop-100;window.scrollTo({top:offsetTop,behavior:"smooth"})}})});const treatmentSections=document.querySelectorAll(".treatment-section");const treatmentObserver=new IntersectionObserver(function(entries){entries.forEach(entry=>{if(entry.isIntersecting){entry.target.style.opacity="1";entry.target.style.transform="translateY(0)"}})},{threshold:.1,rootMargin:"0px 0px -50px 0px"});treatmentSections.forEach(section=>{section.style.opacity="0";section.style.transform="translateY(30px)";section.style.transition="opacity 0.6s ease, transform 0.6s ease";treatmentObserver.observe(section)});const treatmentCards=document.querySelectorAll(".treatment-card");treatmentCards.forEach(card=>{card.addEventListener("mouseenter",function(){this.style.transform="translateY(-10px) scale(1.02)"});card.addEventListener("mouseleave",function(){this.style.transform="translateY(0) scale(1)"})});const consultationButtons=document.querySelectorAll(".consultation-btn");consultationButtons.forEach(button=>{button.addEventListener("click",function(){const ctaSection=document.querySelector(".cta-section");if(ctaSection){const offsetTop=ctaSection.offsetTop-100;window.scrollTo({top:offsetTop,behavior:"smooth"})}})});const cardObserver=new IntersectionObserver(function(entries){entries.forEach(entry=>{if(entry.isIntersecting){entry.target.style.opacity="1";entry.target.style.transform="translateY(0)"}})},{threshold:.2,rootMargin:"0px 0px -30px 0px"});treatmentCards.forEach(card=>{card.style.opacity="0";card.style.transform="translateY(20px)";card.style.transition="opacity 0.5s ease, transform 0.5s ease";cardObserver.observe(card)})}